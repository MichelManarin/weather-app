{"version":3,"sources":["serviceWorker.js","components/Header/Header.js","components/PanelBusca/PanelBusca.js","components/Card/Card.js","components/CardDetail/CardDetail.js","App.js","components/NotFoundPage/NotFoundPage.js","components/Historic/Historic.js","views/Historic/Historic.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","to","Component","PanelBusca","props","state","nomeCidade","handleChange","bind","event","this","setState","target","value","onSubmit","callOpenWeather","onChange","name","id","placeholder","disabled","type","Card","temperatura","nomecidade","nomepais","descricao","CardDetail","showDetail","_handleClick","speed","toFixed","onClick","desc","_ConverteMetreSeg","vento","datastr","max","min","MySwal","withReactContent","Swal","App","callApiHistorico","dados","a","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","response","success","callOpenWeatherDetail","cod","diaAnterior","count","primeiraExe","max_temperatura","min_temperatura","data","dataStrPT","diasSemana","Array","key","list","obj","dataObj","Date","dt_txt","getDay","push","slice","max_temp","min_temp","weather","description","vento_velocidade","wind","main","temp_max","temp_min","detalhes","reg","cidade","previsao","fire","e","preventDefault","elements","filtroCidade","parseFloat","temp","pais","sys","country","$","show","msg","hide","val","erro","newestOnTop","rtl","pauseOnVisibilityChange","map","c","i","NotFoundPage","Historic","dat","setDate","getDate","toLocaleDateString","getTimezoneOffset","year","month","day","formataData","scope","tempo","callApiHistoric","ajax","url","contentType","Object","keys","Historico","historico","componentDidMount","city","Routes","basename","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.212dd503.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.css'; \r\n\r\nclass Header extends Component {\r\n\r\n   \r\n \r\n    render(){\r\n      return (\r\n        <nav className=\"navbar navbar-inverse navbar-fixed-top\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-header\">\r\n              <Link className=\"navbar-brand\" to=\"/\">WEATHER</Link>\r\n            </div>\r\n            <div className=\"collapse navbar-collapse\">\r\n                <ul className=\"nav navbar-nav\">\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/history\">Histórico</Link></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Header;","import React, { Component } from 'react';\r\nimport './PanelBusca.css'; \r\n\r\nclass PanelBusca extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {nomeCidade: ''};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n   handleChange(event) {\r\n        this.setState({nomeCidade: event.target.value});\r\n   }\r\n \r\n    render(){\r\n      return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <form onSubmit={this.props.callOpenWeather}>\r\n                    <div className=\"panel panel-default\">\r\n                        <div className=\"panel-body\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"form-group\">\r\n                                    <input onChange={this.handleChange} value={this.state.nomeCidade} className=\"form-control input-busca\" name=\"filtroCidade\" id=\"filtroCidade\" placeholder=\"Digite o nome da cidade\">\r\n                                    </input>\r\n                                </div>\r\n                                    <button disabled={!this.state.nomeCidade} className=\"btn btn-green btn-filtro\" id=\"btnFiltrar\" type=\"submit\">Filtrar</button>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        </div>                                   \r\n                                        \r\n      );\r\n    }\r\n  }\r\n\r\n  export default PanelBusca;","import React, { Component } from 'react';\r\n\r\nimport './Card.css'; \r\n  \r\n  class Card extends Component {\r\n  \r\n     \r\n      render(){\r\n        return (\r\n            <div className=\"col-md-3\">\r\n                <div className=\"thumbnail card card-primary\">\r\n                    <h1 className=\"temperatura\">\r\n                        {this.props.temperatura}º\r\n                    </h1>\r\n                    <h3>\r\n                       {this.props.nomecidade}, {this.props.nomepais}\r\n                    </h3>\r\n                    <h3 className=\"descricao\">\r\n                        {this.props.descricao}\r\n                    </h3>    \r\n\r\n                </div>\r\n            </div>\r\n                       \r\n                                          \r\n        );\r\n      }\r\n    }\r\n  \r\n    export default Card;","import React, { Component } from 'react';\r\nimport './CardDetail.css'; \r\n  \r\n  class CardDetail extends Component {\r\n\r\n    showDetail = true;\r\n\r\n    constructor(props) {\r\n          super(props);\r\n          this.state = {showDetail : false}\r\n          this._handleClick = this._handleClick.bind(this);\r\n    }\r\n\r\n    _ConverteMetreSeg(speed){\r\n        let kmh = speed * 3.6;\r\n        return kmh.toFixed(0);\r\n    }\r\n\r\n    _handleClick(){\r\n        this.setState({showDetail: this.state.showDetail === false});\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.showDetail) {\r\n            return (\r\n                <div onClick={this._handleClick}>\r\n                    <div className=\"detalhe col-md-2 serrilhado\">\r\n                        <p>{this.props.desc}</p>\r\n                        <span className=\"max\">Vento: {this._ConverteMetreSeg(this.props.vento)} km/h</span>\r\n                    </div>\r\n                </div> \r\n\r\n            );\r\n        } else { \r\n            return (\r\n                <div onClick={this._handleClick}>\r\n                    <div className=\"detalhe col-md-2 serrilhado\">\r\n                        <h3>{this.props.datastr} </h3>\r\n                        <span className=\"max\">{this.props.max} º   -   </span><span className=\"min\">{this.props.min}º</span>\r\n                    </div>\r\n                </div> \r\n            );\r\n        }\r\n      }\r\n    }\r\n  \r\n    export default CardDetail;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Principal.css'; \nimport './App.css';\nimport Header from './components/Header/Header';\nimport PanelBusca from './components/PanelBusca/PanelBusca';\nimport Card from './components/Card/Card';\nimport CardDetail from './components/CardDetail/CardDetail';\nimport $ from \"jquery\";\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MySwal = withReactContent(Swal);\n\nclass App extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.callOpenWeather = this.callOpenWeather.bind(this);\n    this.callOpenWeatherDetail = this.callOpenWeatherDetail.bind(this);\n    this.callApiHistorico = this.callApiHistorico.bind(this);\n\n    this.state = {\n      detalhes : [],\n      erro: \"\",\n      temperatura: \"\",\n      cidade: \"\",\n      descricao: \"\",\n      pais: \"\"\n    }\n  }\n\n  componentDidMount() {\n    $( \".thumbnail\" ).hide();  \n  }\n\n  callApiHistorico = async(dados) => {\n\n    fetch(\"https://weather-app-api-michel-manarin.herokuapp.com/inserthistoric\",{ method: 'POST', body: JSON.stringify(dados,),  \n    headers:{\n      'Content-Type': 'application/json'\n     } })\n      .then(res => res.json())\n        .catch(error => {\n          toast.error('Ocorreu um erro ao atualizar o histórico! ' + error.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            });\n        })\n        .then(\n          (response) => {    \n            toast.success('Histórico atualizado com sucesso!', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n              });\n          },\n      )  \n  } \n\n  callOpenWeatherDetail = async (nomeCidade) => {\n\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\" + nomeCidade +\"&APPID=9ffe2ca11ecd1ca4ab7e197b55f4acfe&units=metric&lang=pt\")\n      .then(res => res.json())\n      .then(\n        (response) => {\n\n          if (response.cod == 200){\n            let count=0;\n            let dados=[];\n            let primeiraExe='S';\n            let diaAnterior;\n            let max_temperatura = 0;\n            let min_temperatura = 999;\n            let data = \"\";\n            let dataStrPT= \"\";\n            let diasSemana = new Array('Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado');\n            \n            for (var key in response.list) {\n\n              var obj = response.list[key];\n              let dataObj  = new Date(obj.dt_txt);\n              let dataAtual = new Date();\n              dataStrPT=diasSemana[dataObj.getDay()];\n\n              if ((diaAnterior !== dataStrPT) && (primeiraExe !== 'S') && (count!==4)){\n                dados.push({data: data.slice(0,10), datastr: diaAnterior, max_temp:max_temperatura.toFixed(0), min_temp:min_temperatura.toFixed(0),\n                            descricao: obj.weather[0].description, vento_velocidade: obj.wind.speed});\n                max_temperatura = 0;\n                min_temperatura = 999;   \n                count = count + 1;   \n              }\n              diaAnterior = dataStrPT;\n              primeiraExe = 'N';\n\n              if (obj.main.temp_max > max_temperatura)\n                max_temperatura = obj.main.temp_max;\n\n              if (obj.main.temp_min < min_temperatura)\n                min_temperatura = obj.main.temp_min;\n\n              data = obj.dt_txt; \n                \n            }\n\n            if (count = 4)\n              dados.push({data: obj.dt_txt.slice(0,10), datastr: dataStrPT, max_temp:max_temperatura.toFixed(0), min_temp:min_temperatura.toFixed(0), \n                          descricao: obj.weather[0].description, vento_velocidade: obj.wind.speed });\n\n            this.setState({\n              detalhes:dados \n            });\n\n              \n            let reg = {cidade:nomeCidade, previsao:[]};\n            reg.previsao=dados;\n            this.callApiHistorico(reg);    \n\n          } else { \n            \n            if (response.cod == 404)\n              MySwal.fire(<p className=\"alerta\">Cidade não encontrada!</p>);\n            else \n              MySwal.fire(response.message);\n          }\n                   \n        },\n      \n      )\n\n  }\n\n  callOpenWeather = async (e) => {\n    e.preventDefault();\n    let nomeCidade = e.target.elements.filtroCidade.value;\n\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\" + nomeCidade +\"&APPID=9ffe2ca11ecd1ca4ab7e197b55f4acfe&units=metric&lang=pt\")\n      .then(res => res.json())\n      .then(\n        (response) => {\n          \n          if (response.cod === 200){\n            this.setState({\n              temperatura: parseFloat(response.main.temp.toFixed(0)), \n              cidade: response.name,\n              pais: response.sys.country,\n              descricao: response.weather[0].description,\n              error: \"\"\n            });\n\n            $( \".thumbnail\" ).show();\n\n          } else {\n            let msg = \"Ocorreu um erro ao realizar a busca.\";\n\n            if (response.cod === 404)\n              msg = \"Cidade não encontrada\";\n\n            this.setState({\n              temperatura: \"\",\n              cidade: \"\",\n              pais: \"\",\n              descricao: \"\",\n              error: msg\n            });\n\n            $( \".thumbnail\" ).hide();\n          } \n        },\n      \n      )\n      \n\n    this.callOpenWeatherDetail(nomeCidade); \n    $( \".input-busca\" ).val(\"\");\n  };\n\n  render(){\n    return (\n      <div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n      />\n        <Header />\n          <div className=\"container body-content\">\n            <div className=\"body-content\">\n              <PanelBusca callOpenWeather={this.callOpenWeather} />\n              <div className=\"row centered\">\n                <Card nomecidade={this.state.cidade} temperatura={this.state.temperatura} \n                      nomepais={this.state.pais} descricao={this.state.descricao}/>\n                <div className=\"col-md-9\">\n                  <div className=\"col-md-12 thumbnail card-detail\">\n                    { this.state.detalhes && this.state.detalhes.map((c, i) => <CardDetail  key={i} max={c.max_temp} \n                                                                                min={c.min_temp} datastr={c.datastr} \n                                                                                desc={c.descricao} vento={c.vento_velocidade} />)}\n                   \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> \n      </div>                       \n                                      \n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport './NotFoundPage.css'; \r\n\r\n  class NotFoundPage extends Component {\r\n  \r\n      render(){\r\n        \r\n        return (\r\n            <div className=\"NotFound\">\r\n                <h1>404</h1>\r\n                <p>Página não encontrada / Page not found</p>\r\n            </div>\r\n                \r\n        );\r\n      }\r\n    }\r\n  \r\n    export default NotFoundPage;","import React, { Component } from 'react';\r\n\r\nimport './Historic.css'; \r\nclass Historic extends Component {\r\n\r\n    formataData(data) {\r\n      let dat = new Date(data);\r\n      let options = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };      \r\n      dat.setDate(dat.getDate() + 1);  \r\n      return dat.toLocaleDateString( dat.getTimezoneOffset(), options );\r\n    }\r\n \r\n    render(){\r\n      return (\r\n        <div>\r\n          <h4>{this.props.nomecidade} - {this.formataData(this.props.data)} </h4>\r\n          \r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Data</th>\r\n                <th scope=\"col\">Mínima</th>\r\n                <th scope=\"col\">Máxima</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              { this.props.tempo && this.props.tempo.map((c, i) =>  \r\n              <tr >\r\n                <th scope=\"row\">{this.formataData(c.data)}</th>\r\n                <th scope=\"row\">{c.min}º</th>\r\n                <th scope=\"row\">{c.max}º</th>\r\n              </tr>\r\n                )}  \r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Historic;","import React, { Component } from 'react';\r\nimport $ from \"jquery\";\r\nimport Header from '../../components/Header/Header';\r\nimport Hist from '../../components/Historic/Historic';\r\nimport './Historic.css'; \r\n  \r\n  class Historic extends Component {\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n        this.callApiHistoric = this.callApiHistoric.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    \r\n        this.state = {\r\n          historico : []\r\n        }\r\n      }\r\n\r\n      callApiHistoric = async () => {\r\n\r\n        $.ajax({\r\n          method:'GET',\r\n          url:\"https://weather-app-api-michel-manarin.herokuapp.com/historic\",\r\n          contentType: 'application/json',\r\n            success:function(response){\r\n              \r\n            let data = [];\r\n            Object.keys(response.Historico[0]).map(function(key){\r\n              data.push(response.Historico[0][key]);\r\n              $( \".historic\" ).hide();\r\n            })\r\n            this.setState({ historico:data })\r\n\r\n           }.bind(this)\r\n        });\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.callApiHistoric();\r\n      }\r\n  \r\n      render(){\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container body-content\">\r\n                    <div className=\"body-content\">\r\n                      <h5 className=\"panel panel-default historic\">O histórico não possui dados</h5>\r\n                      { this.state.historico && this.state.historico.map((c, i) => \r\n                        <Hist nomecidade={c.city} data={c.data} tempo={c.tempo} key={i}/>                        \r\n                      )}\r\n                    </div>\r\n                </div>\r\n              </div>            \r\n                                          \r\n        );\r\n      }\r\n    }\r\n  \r\n    export default Historic;","import React from \"react\";\r\n\r\nimport { Route, HashRouter, Switch } from 'react-router-dom'\r\n\r\nimport App from './App';\r\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage';\r\nimport Historic from './views/Historic/Historic'\r\n\r\nconst Routes = () => (\r\n    <HashRouter basename=\"/\">\r\n      <Switch>\r\n        <Route exact path='/' component={() => <App/>} />\r\n        <Route path='/history'  component={() => <Historic/>} />\r\n        <Route path='*' exact={true} component={NotFoundPage} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router>\n    <Routes />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}